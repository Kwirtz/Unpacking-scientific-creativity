replace_na(list(DL = 0, concepts = 'unknown'))
data_surv <- data %>%
# Filter for last observation (=right cernsoring or transition)
filter(is.na(transited_t) | transited_t <= 1) %>%
group_by(AID) %>%
slice_max(order_by = t, n= 1, with_ties = FALSE) %>%
ungroup() %>%
# Add some variables
mutate(auth_star = citation_fw >= 0.9,
aff_star = aff_citation_fw >= 0.9,
)
# Previous filtering approach:
# filter(  (type == 'education' & year == year_max) | (type == 'switcher' & transition == 1)) %>%
data_surv %>% count(type)
# Surf object
surv_object <- Surv(time = data_surv$t, event = data_surv$transition)
table(surv_object)
data_surv$DL_new <- factor(data_surv$DL, levels = c(0, 1), labels = c("Others", "Deep learning Researchers"))
data_surv$auth_star_new <- factor(data_surv$auth_star, levels = c(FALSE, TRUE), labels = c("Others", "Star Researchers"))
fit_km0 <- survfit(surv_object ~ 1,
data = data_surv)
fit_km1 <- survfit(surv_object ~ DL_new,
data = data_surv)
fit_km2 <- survfit(surv_object ~ auth_star_new,
data = data_surv)
fit_km3 <- survfit(surv_object ~ aff_star,
data = data_surv)
p1 <- fit_km0 %>% autoplot() + labs(title= 'KM: baseline')
p2 <- fit_km1 %>% autoplot() + labs(title= 'KM: DL researcher')
p3 <- fit_km2 %>% autoplot() + labs(title= 'KM: Star researcher')
p4 <- fit_km3 %>% autoplot() + labs(title= 'KM: Star institution')
(p1 + p2) / (p3 + p4) +  plot_layout(guides = "collect") & theme(legend.position = 'bottom') & labs(x = 'Time', y = 'Survival Probability')
theme_settings = theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 6),
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 6),
axis.title.y = element_text(size = 6),
panel.border = element_rect(colour = "black", fill=NA, size=0.75),
plot.margin = unit(oma2, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.key=element_blank(),
legend.title = element_text(size = 6),
legend.position="top",
legend.text=element_text(size = 6))
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
graphics.off()
Sys.setenv(LANG = "en") # For english language
options(scipen = 5) # To deactivate annoying scientific number notation
library(ggplot2)
library(tidyverse)
library(lubridate)
library(data.table)
dt <- fread("../Data/Fig4_a.csv")
dt[, Period := dropout - seniority]
dt
dt[, Period := dropout - seniority]
dt[, Position := ifelse(Period >= 3 & Period <= 6, "phd",
ifelse(Period > 6 & Period <= 15, "mid",
ifelse(Period > 15, "senior", NA)))]
counts <- data[, .(count = .N), by = Position]
unloadNamespace('data.table')
unloadNamespace('reshape2')
unloadNamespace('plyr')
install.packages("data.table", type="source", dependencies=TRUE)
counts <- data[, .(count = .N), by = Position]
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
graphics.off()
Sys.setenv(LANG = "en") # For english language
options(scipen = 5) # To deactivate annoying scientific number notation
library(ggplot2)
library(tidyverse)
library(lubridate)
library(data.table)
dt <- fread("../Data/Fig4_a.csv")
dt[, Period := dropout - seniority]
dt[, Position := ifelse(Period >= 3 & Period <= 6, "phd",
ifelse(Period > 6 & Period <= 15, "mid",
ifelse(Period > 15, "senior", NA)))]
counts <- data[, .(count = .N), by = Position]
setorder(counts, Position)
counts <- dt[, .(count = .N), by = Position]
setorder(counts, Position)
counts[, cum_value := cumsum(count)]
counts[, left := rev(cumsum(rev(count)))]
counts[, share_leaving := count / left]
counts[, share_leaving_py := count / sum(count)]
View(counts)
View(dt)
counts <- dt[, .(count = .N), by = .(Position, dropout)]
setorder(counts, Position)
counts[, cum_value := cumsum(count)]
counts[, left := rev(cumsum(rev(count)))]
counts[, share_leaving := count / left]
counts[, share_leaving_py := count / sum(count)]
counts
View(counts)
View(counts)
counts
counts <- dt[, .(count = .N), by = .(Position, dropout)]
setorder(counts, Position)
counts[, cum_value := cumsum(count), by = .(Position)]
counts[, left := rev(cumsum(rev(count))), by = .(Position)]
counts[, share_leaving := count / left]
counts[, share_leaving_py := count / sum(count)]
View(counts)
oma2 <- c(0.3,0,0,0.3)
figa = ggplot(counts, aes(x = dropout,color=Position)) +
geom_line(size=1.25,aes(y = share_leaving), color= "#1f77b4") +
ggtitle("") +
labs(x = "Year",
y = "Share") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 6),
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 6),
axis.title.y = element_text(size = 6),
panel.border = element_rect(colour = "black", fill=NA, size=0.75),
plot.margin = unit(oma2, "cm"),
plot.title = element_text(size = 6),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
figa
oma2 <- c(0.3,0,0,0.3)
figa = ggplot(counts, aes(x = dropout,color=Position)) +
geom_line(size=1.25,aes(y = share_leaving,color=Position), color= "#1f77b4") +
ggtitle("") +
labs(x = "Year",
y = "Share") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 6),
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 6),
axis.title.y = element_text(size = 6),
panel.border = element_rect(colour = "black", fill=NA, size=0.75),
plot.margin = unit(oma2, "cm"),
plot.title = element_text(size = 6),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
figa
counts
oma2 <- c(0.3,0,0,0.3)
figa = ggplot(counts, aes(x = c(1995,2021))) +
geom_line(size=1.25,aes(y = share_leaving,color=Position), color= "#1f77b4") +
ggtitle("") +
labs(x = "Year",
y = "Share") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 6),
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 6),
axis.title.y = element_text(size = 6),
panel.border = element_rect(colour = "black", fill=NA, size=0.75),
plot.margin = unit(oma2, "cm"),
plot.title = element_text(size = 6),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
figa
dt <- na.omit(dt)
dt <- na.omit(dt)
counts <- dt[, .(count = .N), by = .(Position, dropout)]
setorder(counts, Position)
counts[, cum_value := cumsum(count), by = .(Position)]
counts[, left := rev(cumsum(rev(count))), by = .(Position)]
counts[, share_leaving := count / left]
counts[, share_leaving_py := count / sum(count)]
counts
oma2 <- c(0.3,0,0,0.3)
figa = ggplot(counts, aes(x = dropout, y = share_leaving, color=Position)) +
geom_line(size=1.25) +
ggtitle("") +
labs(x = "Year",
y = "Share") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 6),
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 6),
axis.title.y = element_text(size = 6),
panel.border = element_rect(colour = "black", fill=NA, size=0.75),
plot.margin = unit(oma2, "cm"),
plot.title = element_text(size = 6),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
figa
counts
View(counts)
dt <- na.omit(dt)
dt <- dt[order(Position, dropout)]
counts <- dt[, .(count = .N), by = .(Position, dropout)]
setorder(counts, Position)
counts[, cum_value := cumsum(count), by = .(Position)]
counts[, left := rev(cumsum(rev(count))), by = .(Position)]
counts[, share_leaving := count / left]
counts[, share_leaving_py := count / sum(count)]
oma2 <- c(0.3,0,0,0.3)
figa = ggplot(counts, aes(x = dropout, y = share_leaving, color=Position)) +
geom_line(size=1.25) +
ggtitle("") +
labs(x = "Year",
y = "Share") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 6),
axis.text.y = element_text(size = 6),
axis.title.x = element_text(size = 6),
axis.title.y = element_text(size = 6),
panel.border = element_rect(colour = "black", fill=NA, size=0.75),
plot.margin = unit(oma2, "cm"),
plot.title = element_text(size = 6),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
figa
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
graphics.off()
Sys.setenv(LANG = "en") # For english language
options(scipen = 5) # To deactivate annoying scientific number notation
### Load packages
library(tidyverse) # Collection of all the good stuff like dplyr, ggplot2 ect.
library(magrittr) # For extra-piping operators (eg. %<>%)
library(glue)
library(data.table)
library(dplyr)
library(ks)
# Descriptives
#library(skimr)
library(stargazer)
library(corrplot)
# ML
library(xgboost)
library(caret)
library(caTools)
library(e1071)
df <- read_csv("../../Data/regression.csv")
df$year <- as.factor(df$year)
df$journal_main_cat
length(unique(df$journal_main_cat))
df_temp = df %>%
drop_na(main_category)
mean(df_temp$nb_cit, na.rm = TRUE)
df_temp = df[is.na(df$main_category),]
mean(df_temp$nb_cit, na.rm = TRUE)
df %<>%
group_by(journal_main_cat, year) %>%
mutate(nb_cit_fw = nb_cit %>% percent_rank(),
wang_mesh_fw = wang_mesh %>% percent_rank(),
wang_ref_fw = wang_ref %>% percent_rank(),
uzzi_mesh_fw = uzzi_mesh %>% percent_rank(),
uzzi_ref_fw = uzzi_ref %>% percent_rank(),
foster_mesh_fw = foster_mesh %>% percent_rank(),
foster_ref_fw = foster_ref %>% percent_rank(),
lee_mesh_fw = lee_mesh %>% percent_rank(),
lee_ref_fw = lee_ref %>% percent_rank(),
shibayama_abstract_fw = shibayama_abstract %>% percent_rank(),
shibayama_title_fw = shibayama_title %>% percent_rank(),
author_intra_abstract_fw = author_intra_abstract %>% percent_rank(),
author_inter_abstract_fw = author_inter_abstract %>% percent_rank(),
author_intra_title_fw = author_intra_title %>% percent_rank(),
author_inter_title_fw = author_inter_title %>% percent_rank(),
DI5_fw = DI5 %>% percent_rank(),
DI1_fw = DI1 %>% percent_rank(),
DI1nok_fw = DI1nok %>% percent_rank(),
DeIn_fw = DeIn %>% percent_rank(),
Breadth_fw = Breadth %>% percent_rank(),
Depth_fw = Depth %>% percent_rank(),
) %>%
ungroup()
fwrite(df,'reg_df.csv')
df$journal_age <- replace(df$journal_age, which(df$journal_age < 0), NA)
df <- df %>% mutate(novel_f1000 = ifelse(main_category %in% novelty_cat, 1, 0))
df <- read_csv("../../Data/regression.csv")
df$year <- as.factor(df$year)
novelty_cat <- c("Technical Advance","Interesting Hypothesis","Novel Drug Target")
variables <- c("nb_ref", "nb_meshterms", "year", "nb_aut", "journal_SJR", "is_review", "journal_age","sum_deg_cen_cumsum","sum_deg_cen_cumsum_mean", "journal_main_cat")
indicators <- c("uzzi_ref","uzzi_mesh","lee_ref","lee_mesh","foster_ref","foster_mesh",
"wang_ref","wang_mesh","shibayama_abstract","shibayama_title")
indicators_fw <- paste0(indicators, "_fw")
independant <-  c("author_intra_abstract","author_inter_abstract", "author_intra_title", "author_inter_title")
independant_fw <- paste0(independant, "_fw")
impact <-  c("nb_cit","DI1","DI5","DI1nok","DeIn","Breadth","Depth")
impact_fw <- paste0(impact, "_fw")
df$journal_age <- replace(df$journal_age, which(df$journal_age < 0), NA)
df <- df %>% mutate(novel_f1000 = ifelse(main_category %in% novelty_cat, 1, 0))
novelty_cat <- c("Technical Advance","Interesting Hypothesis","Novel Drug Target")
variables <- c("nb_ref", "nb_meshterms", "year", "nb_aut", "journal_SJR", "is_review", "journal_age","sum_deg_cen_cumsum","sum_deg_cen_cumsum_mean", "journal_main_cat")
indicators <- c("uzzi_ref","uzzi_mesh","lee_ref","lee_mesh","foster_ref","foster_mesh",
"wang_ref","wang_mesh","shibayama_abstract","shibayama_title")
indicators_fw <- paste0(indicators, "_fw")
independant <-  c("author_intra_abstract","author_inter_abstract", "author_intra_title", "author_inter_title")
independant_fw <- paste0(independant, "_fw")
impact <-  c("nb_cit","DI1","DI5","DI1nok","DeIn","Breadth","Depth")
impact_fw <- paste0(impact, "_fw")
df$journal_age <- replace(df$journal_age, which(df$journal_age < 0), NA)
df <- df %>% mutate(novel_f1000 = ifelse(main_category %in% novelty_cat, 1, 0))
df %<>%
mutate(sum_deg_cen_cumsum_mean = sum_deg_cen_cumsum/nb_aut,
uzzi_ref = -uzzi_ref,
uzzi_mesh = -uzzi_mesh)
df %<>%
filter(nb_ref>1 & nb_meshterms>1 & nb_aut>1 & Journal_ISSN != "" & journal_main_cat != "") %>%
drop_na(Journal_ISSN)
df
df %<>%
filter(nb_ref>1 & nb_meshterms>1 & nb_aut>1  & journal_main_cat != "") %>%
drop_na(Journal_ISSN)
df %<>%
filter(nb_ref>1 & nb_meshterms>1 & nb_aut>1  & journal_main_cat != "")
df %<>%
replace_na(list(nb_ref = 0, nb_meshterms = 0))
df %<>%
group_by(journal_main_cat, year) %>%
mutate(nb_cit_fw = nb_cit %>% percent_rank(),
wang_mesh_fw = wang_mesh %>% percent_rank(),
wang_ref_fw = wang_ref %>% percent_rank(),
uzzi_mesh_fw = uzzi_mesh %>% percent_rank(),
uzzi_ref_fw = uzzi_ref %>% percent_rank(),
foster_mesh_fw = foster_mesh %>% percent_rank(),
foster_ref_fw = foster_ref %>% percent_rank(),
lee_mesh_fw = lee_mesh %>% percent_rank(),
lee_ref_fw = lee_ref %>% percent_rank(),
shibayama_abstract_fw = shibayama_abstract %>% percent_rank(),
shibayama_title_fw = shibayama_title %>% percent_rank(),
author_intra_abstract_fw = author_intra_abstract %>% percent_rank(),
author_inter_abstract_fw = author_inter_abstract %>% percent_rank(),
author_intra_title_fw = author_intra_title %>% percent_rank(),
author_inter_title_fw = author_inter_title %>% percent_rank(),
DI5_fw = DI5 %>% percent_rank(),
DI1_fw = DI1 %>% percent_rank(),
DI1nok_fw = DI1nok %>% percent_rank(),
DeIn_fw = DeIn %>% percent_rank(),
Breadth_fw = Breadth %>% percent_rank(),
Depth_fw = Depth %>% percent_rank(),
) %>%
ungroup()
fwrite(df,'reg_df.csv')
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
graphics.off()
Sys.setenv(LANG = "en") # For english language
options(scipen = 5) # To deactivate annoying scientific number notation
### Load packages
library(tidyverse) # Collection of all the good stuff like dplyr, ggplot2 ect.
library(magrittr) # For extra-piping operators (eg. %<>%)
library(glue)
library(data.table)
library(dplyr)
library(ks)
# Descriptives
#library(skimr)
library(stargazer)
library(corrplot)
# ML
library(xgboost)
library(caret)
library(caTools)
library(e1071)
df <- read_csv("../../Data/regression.csv")
df$year <- as.factor(df$year)
novelty_cat <- c("Technical Advance","Interesting Hypothesis","Novel Drug Target")
variables <- c("nb_ref", "nb_meshterms", "year", "nb_aut", "journal_SJR", "is_review", "journal_age","sum_deg_cen_cumsum","sum_deg_cen_cumsum_mean", "journal_main_cat")
indicators <- c("uzzi_ref","uzzi_mesh","lee_ref","lee_mesh","foster_ref","foster_mesh",
"wang_ref","wang_mesh","shibayama_abstract","shibayama_title")
indicators_fw <- paste0(indicators, "_fw")
independant <-  c("author_intra_abstract","author_inter_abstract", "author_intra_title", "author_inter_title")
independant_fw <- paste0(independant, "_fw")
impact <-  c("nb_cit","DI1","DI5","DI1nok","DeIn","Breadth","Depth")
impact_fw <- paste0(impact, "_fw")
df$journal_age <- replace(df$journal_age, which(df$journal_age < 0), NA)
df <- df %>% mutate(novel_f1000 = ifelse(main_category %in% novelty_cat, 1, 0))
df %<>%
mutate(sum_deg_cen_cumsum_mean = sum_deg_cen_cumsum/nb_aut,
uzzi_ref = -uzzi_ref,
uzzi_mesh = -uzzi_mesh)
df %<>%
filter(nb_ref>1 & nb_meshterms>1 & nb_aut>1 & Journal_ISSN != "" & journal_main_cat != "") %>%
drop_na(Journal_ISSN)
df %<>%
filter(nb_ref>1 & nb_meshterms>1 & nb_aut>1 & journal_ISSN != "" & journal_main_cat != "") %>%
drop_na(Journal_ISSN)
df %<>%
filter(nb_ref>1 & nb_meshterms>1 & nb_aut>1 & journal_ISSN != "" & journal_main_cat != "") %>%
drop_na(journal_ISSN)
df %<>%
replace_na(list(nb_ref = 0, nb_meshterms = 0))
df %<>%
group_by(journal_main_cat, year) %>%
mutate(nb_cit_fw = nb_cit %>% percent_rank(),
wang_mesh_fw = wang_mesh %>% percent_rank(),
wang_ref_fw = wang_ref %>% percent_rank(),
uzzi_mesh_fw = uzzi_mesh %>% percent_rank(),
uzzi_ref_fw = uzzi_ref %>% percent_rank(),
foster_mesh_fw = foster_mesh %>% percent_rank(),
foster_ref_fw = foster_ref %>% percent_rank(),
lee_mesh_fw = lee_mesh %>% percent_rank(),
lee_ref_fw = lee_ref %>% percent_rank(),
shibayama_abstract_fw = shibayama_abstract %>% percent_rank(),
shibayama_title_fw = shibayama_title %>% percent_rank(),
author_intra_abstract_fw = author_intra_abstract %>% percent_rank(),
author_inter_abstract_fw = author_inter_abstract %>% percent_rank(),
author_intra_title_fw = author_intra_title %>% percent_rank(),
author_inter_title_fw = author_inter_title %>% percent_rank(),
DI5_fw = DI5 %>% percent_rank(),
DI1_fw = DI1 %>% percent_rank(),
DI1nok_fw = DI1nok %>% percent_rank(),
DeIn_fw = DeIn %>% percent_rank(),
Breadth_fw = Breadth %>% percent_rank(),
Depth_fw = Depth %>% percent_rank(),
) %>%
ungroup()
fwrite(df,'reg_df.csv')
df %>% naniar::gg_miss_var()
summary_col <- function(col) {
print(sum(!is.na(df[[col]])))
print(summary(df[[col]]))
print(sd(df[[col]],na.rm=TRUE))
}
summary_col(col="shibayama_abstract")
df_temp = df %>%
drop_na(main_category)
mean(df_temp$nb_cit, na.rm = TRUE)
df_temp = df[is.na(df$main_category),]
mean(df_temp$nb_cit, na.rm = TRUE)
df_f1000 <- df %>%
drop_na(main_category)
df_f1000 %>% count(year) %>%
ggplot(aes(x = year, y = n)) +
geom_col() +
theme_classic() +
ggtitle("Number of papers matched with F1000 2000-2005") +
theme(plot.title = element_text(hjust = 0.5))
f1000_cat = c()
f1000_cat_binary = c()
for (i in novelty_cat){
name_cat = str_replace_all(i, c(" " = "_","/"="_",":"="_"))
name_cat_binary = str_replace_all(paste(i,"_binary"), c(" " = "_","/"="_",":"="_"))
df_f1000[name_cat] <- lengths(regmatches(df_f1000$categories, gregexpr(i,df_f1000$categories)))
df_f1000[name_cat_binary] <- ifelse(df_f1000[name_cat] >= 1, 1, 0)
f1000_cat <- append(f1000_cat,name_cat)
f1000_cat_binary <- append(f1000_cat_binary,name_cat_binary)
}
df_f1000 <- df_f1000 %>%
mutate(novel_f1000_v2 = case_when(Technical_Advance__binary == 1 ~ 1,
Interesting_Hypothesis__binary == 1 ~ 1,
Novel_Drug_Target__binary == 1 ~ 1))
df_f1000$novel_f1000_v2 <- replace(df_f1000$novel_f1000_v2, is.na(df_f1000$novel_f1000_v2), 0)
df %>%
select( all_of(c(indicators_fw,variables,independant_fw)) )
df %>%
select( all_of(c(indicators_fw,indicators,variables,independant_fw,
"count_typical","count_diverse","share_typical","share_diverse","Journal_ISSN")) )%>%
saveRDS(file = "../../Data/regression_1.rds")
df %>%
select( all_of(c(indicators_fw,indicators,variables,independant_fw,
"count_typical","count_diverse","share_typical","share_diverse","journal_ISSN")) )%>%
saveRDS(file = "../../Data/regression_1.rds")
df_f1000 %>%
select( all_of(c(f1000_cat,f1000_cat_binary,variables,independant_fw,"novel_f1000","novel_f1000_v2",
"count_typical","count_diverse","share_typical","share_diverse","journal_ISSN")) ) %>%
saveRDS(file = "../../Data/regression_2.rds")
df %>%
select( all_of(c(impact_fw,impact,variables,independant_fw,
"count_typical","count_diverse","share_typical","share_diverse","journal_ISSN")) )%>%
saveRDS(file = "../../Data/regression_3.rds")
setwd("C:/Users/kevin/Documents/GitHub/Taxonomy-of-novelty")
df = fread('Data/regression.csv')
df = unique(df, by = 'PMID')
df[,journal_main_cat := strsplit(journal_category, "; ")[[1]][1], by = 'PMID']
df[,journal_main_cat := gsub(' \\(Q\\d\\)$','',journal_main_cat)]
length(unique(df$journal_main_cat))
summary(df)
unique(df$main_category)
novelty_cat <- c("New Finding", "Technical Advance","Interesting Hypothesis","Novel Drug Target")
variables <- c("nb_ref","year","nb_aut","journal_SJR")
indicators <- c("uzzi_mesh","lee_mesh","foster_mesh","wang_mesh",
"uzzi_ref","lee_ref","foster_ref","wang_ref",
"shibayama_abstract","shibayama_title",
"author_intra_abstract","author_inter_abstract",
"author_intra_title", "author_inter_title")
indicators_fw <- paste0(indicators, "_fw")
dependant <-  c("nb_cit","DI1","DI5","DI1nok","DeIn","Breadth","Depth")
dependant_fw <- paste0(dependant, "_fw")
df <- df %>% mutate(novel_f1000 = ifelse(main_category %in% novelty_cat, 1, 0))
df <- df %>% filter(nb_ref>1 & nb_meshterms>1 & nb_aut>1)
df %<>%
group_by(journal_main_cat, year) %>%
mutate(nb_cit_fw = nb_cit %>% percent_rank(),
wang_mesh_fw = wang_mesh %>% percent_rank(),
wang_ref_fw = wang_ref %>% percent_rank(),
uzzi_mesh = -uzzi_mesh,
uzzi_ref = -uzzi_ref,
uzzi_mesh_fw = uzzi_mesh %>% percent_rank(),
uzzi_ref_fw = uzzi_ref %>% percent_rank(),
foster_mesh_fw = foster_mesh %>% percent_rank(),
foster_ref_fw = foster_ref %>% percent_rank(),
lee_mesh_fw = lee_mesh %>% percent_rank(),
lee_ref_fw = lee_ref %>% percent_rank(),
shibayama_abstract_fw = shibayama_abstract %>% percent_rank(),
shibayama_title_fw = shibayama_title %>% percent_rank(),
author_intra_abstract_fw = author_intra_abstract %>% percent_rank(),
author_inter_abstract_fw = author_inter_abstract %>% percent_rank(),
author_intra_title_fw = author_intra_title %>% percent_rank(),
author_inter_title_fw = author_inter_title %>% percent_rank(),
DI5_fw = DI5 %>% percent_rank(),
DI1_fw = DI1 %>% percent_rank(),
DI1nok_fw = DI1nok %>% percent_rank(),
DeIn_fw = DeIn %>% percent_rank(),
Breadth_fw = Breadth %>% percent_rank(),
Depth_fw = Depth %>% percent_rank(),
) %>%
ungroup()
fwrite(df,'reg_df.csv')
