rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
graphics.off()
Sys.setenv(LANG = "en") # For english language
options(scipen = 5) # To deactivate annoying scientific number notation
### Load packages
library(tidyverse) # Collection of all the good stuff like dplyr, ggplot2 ect.
library(magrittr) # For extra-piping operators (eg. %<>%)
library(glue)
# Descriptives
#library(skimr)
library(stargazer)
library(corrplot)
# ML
library(xgboost)
library(caret)
library(caTools)
library(e1071)
library(quantreg)
df = read_rds(file = "../../Data/regression_1.rds")
indicators <- c("uzzi_ref","uzzi_mesh","lee_ref","lee_mesh","foster_ref","foster_mesh",
"wang_ref","wang_mesh","shibayama_abstract","shibayama_title")
indicators_fw <- paste0(indicators, "_fw")
independant <-  c("author_intra_abstract","author_inter_abstract", "author_intra_title", "author_inter_title")
independant_fw <- paste0(independant, "_fw")
variables <- c("nb_ref", "nb_meshterms", "year", "nb_aut", "journal_SJR", "is_review",
"journal_age","sum_deg_cen_cumsum","sum_deg_cen_cumsum_mean")
mod_1 = lm(uzzi_mesh ~ author_intra_abstract_fw + author_inter_abstract_fw +
author_intra_abstract_fw**2 + author_intra_abstract_fw*author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + is_review + journal_age + sum_deg_cen_cumsum,
data = df)
mod_2 = lm(lee_mesh ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_intra_abstract_fw*author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + is_review + journal_age + sum_deg_cen_cumsum,
data = df)
mod_3 = lm(foster_mesh ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_intra_abstract_fw*author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + is_review + journal_age + sum_deg_cen_cumsum,
data = df)
mod_4 = lm(wang_mesh ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_intra_abstract_fw*author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + is_review + journal_age + sum_deg_cen_cumsum,
data = df)
mod_5 = lm(shibayama_abstract ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_intra_abstract_fw*author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + is_review + journal_age + sum_deg_cen_cumsum,
data = df)
stargazer(mod_1, mod_2, mod_3, mod_4, mod_5,
type = 'text', omit = c(variables,"Constant"))
mod_1 = lm(uzzi_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw +
author_intra_abstract_fw**2 + author_intra_abstract_fw*author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + is_review + journal_age + sum_deg_cen_cumsum,
data = df)
mod_2 = lm(lee_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_intra_abstract_fw*author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + is_review + journal_age + sum_deg_cen_cumsum,
data = df)
mod_3 = lm(foster_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_intra_abstract_fw*author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + is_review + journal_age + sum_deg_cen_cumsum,
data = df)
mod_4 = lm(wang_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_intra_abstract_fw*author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + is_review + journal_age + sum_deg_cen_cumsum,
data = df)
mod_5 = lm(shibayama_abstract_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_intra_abstract_fw*author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + is_review + journal_age + sum_deg_cen_cumsum,
data = df)
stargazer(mod_1, mod_2, mod_3, mod_4, mod_5,
type = 'text', omit = c(variables,"Constant"))
mod_1 = lm(uzzi_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw +
author_intra_abstract_fw**2 + author_intra_abstract_fw*author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + sum_deg_cen_cumsum,
data = df)
mod_2 = lm(lee_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_intra_abstract_fw*author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + sum_deg_cen_cumsum,
data = df)
mod_3 = lm(foster_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_intra_abstract_fw*author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + sum_deg_cen_cumsum,
data = df)
mod_4 = lm(wang_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_intra_abstract_fw*author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + sum_deg_cen_cumsum,
data = df)
mod_5 = lm(shibayama_abstract_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_intra_abstract_fw*author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + sum_deg_cen_cumsum,
data = df)
stargazer(mod_1, mod_2, mod_3, mod_4, mod_5,
type = 'text', omit = c(variables,"Constant"))
mod_1 = lm(uzzi_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw +
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + sum_deg_cen_cumsum,
data = df)
mod_2 = lm(lee_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + sum_deg_cen_cumsum,
data = df)
mod_3 = lm(foster_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + sum_deg_cen_cumsum,
data = df)
mod_4 = lm(wang_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + sum_deg_cen_cumsum,
data = df)
mod_5 = lm(shibayama_abstract_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + sum_deg_cen_cumsum,
data = df)
stargazer(mod_1, mod_2, mod_3, mod_4, mod_5,
type = 'text', omit = c(variables,"Constant"))
mod_1 = lm(uzzi_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw +
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR,
data = df)
mod_2 = lm(lee_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR,
data = df)
mod_3 = lm(foster_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR,
data = df)
mod_4 = lm(wang_mesh_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR,
data = df)
mod_5 = lm(shibayama_abstract_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR,
data = df)
stargazer(mod_1, mod_2, mod_3, mod_4, mod_5,
type = 'text', omit = c(variables,"Constant"))
mod_1 = lm(uzzi_ref_fw ~ author_intra_abstract_fw + author_inter_abstract_fw +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + is_review + journal_age + sum_deg_cen_cumsum,
data = df)
mod_2 = lm(lee_ref_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + is_review + journal_age + sum_deg_cen_cumsum,
data = df)
mod_3 = lm(foster_ref_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + is_review + journal_age + sum_deg_cen_cumsum,
data = df)
mod_4 = lm(wang_ref_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + is_review + journal_age + sum_deg_cen_cumsum,
data = df)
mod_5 = lm(shibayama_title_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
nb_ref + nb_meshterms + year + nb_aut + journal_SJR + is_review + journal_age + sum_deg_cen_cumsum,
data = df)
stargazer(mod_1, mod_2, mod_3, mod_4, mod_5,
type = 'text', omit = variables)
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
graphics.off()
Sys.setenv(LANG = "en") # For english language
options(scipen = 5) # To deactivate annoying scientific number notation
### Load packages
library(tidyverse) # Collection of all the good stuff like dplyr, ggplot2 ect.
library(magrittr) # For extra-piping operators (eg. %<>%)
library(glue)
# Descriptives
#library(skimr)
library(stargazer)
library(corrplot)
# ML
library(xgboost)
library(caret)
library(caTools)
library(e1071)
library(quantreg)
mod_1 = lm(uzzi_ref_fw ~ author_intra_abstract_fw + author_inter_abstract_fw +
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR,
data = df)
df = read_rds(file = "../../Data/regression_1.rds")
indicators <- c("uzzi_ref","uzzi_mesh","lee_ref","lee_mesh","foster_ref","foster_mesh",
"wang_ref","wang_mesh","shibayama_abstract","shibayama_title")
indicators_fw <- paste0(indicators, "_fw")
independant <-  c("author_intra_abstract","author_inter_abstract", "author_intra_title", "author_inter_title")
independant_fw <- paste0(independant, "_fw")
variables <- c("nb_ref", "nb_meshterms", "year", "nb_aut", "journal_SJR", "is_review",
"journal_age","sum_deg_cen_cumsum","sum_deg_cen_cumsum_mean")
mod_1 = lm(uzzi_ref_fw ~ author_intra_abstract_fw + author_inter_abstract_fw +
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR,
data = df)
mod_2 = lm(lee_ref_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR,
data = df)
mod_3 = lm(foster_ref_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR,
data = df)
mod_4 = lm(wang_ref_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR,
data = df)
mod_5 = lm(shibayama_title_fw ~ author_intra_abstract_fw + author_inter_abstract_fw+
author_intra_abstract_fw**2 + author_inter_abstract_fw**2 +
nb_ref + nb_meshterms + year + nb_aut + journal_SJR,
data = df)
stargazer(mod_1, mod_2, mod_3, mod_4, mod_5,
type = 'text', omit = c(variables,"Constant"))
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
graphics.off()
Sys.setenv(LANG = "en") # For english language
options(scipen = 5) # To deactivate annoying scientific number notation
### Load packages
library(tidyverse) # Collection of all the good stuff like dplyr, ggplot2 ect.
library(magrittr) # For extra-piping operators (eg. %<>%)
library(glue)
# Descriptives
#library(skimr)
library(stargazer)
library(corrplot)
# ML
library(xgboost)
library(caret)
library(caTools)
library(e1071)
df <- read_csv("../../Data/regression.csv")
df$year <- as.factor(df$year)
novelty_cat <- c("Technical Advance","Interesting Hypothesis","Novel Drug Target")
variables <- c("nb_ref", "nb_meshterms", "year", "nb_aut", "journal_SJR", "is_review", "journal_age","sum_deg_cen_cumsum","sum_deg_cen_cumsum_mean")
indicators <- c("uzzi_ref","uzzi_mesh","lee_ref","lee_mesh","foster_ref","foster_mesh",
"wang_ref","wang_mesh","shibayama_abstract","shibayama_title")
indicators_fw <- paste0(indicators, "_fw")
independant <-  c("author_intra_abstract","author_inter_abstract", "author_intra_title", "author_inter_title")
independant_fw <- paste0(independant, "_fw")
impact <-  c("nb_cit","DI1","DI5","DI1nok","DeIn","Breadth","Depth")
impact_fw <- paste0(impact, "_fw")
df %<>%
rowwise() %>%
mutate(journal_main_cat = strsplit(journal_category, ";")[[1]][1]) %>%
ungroup() %>%
mutate(journal_main_cat = gsub(' \\(Q\\d\\)$', "", journal_main_cat))
df$journal_age <- replace(df$journal_age, which(df$journal_age < 0), NA)
df <- df %>% mutate(novel_f1000 = ifelse(main_category %in% novelty_cat, 1, 0))
df %<>%
mutate(sum_deg_cen_cumsum_mean = sum_deg_cen_cumsum/nb_aut,
uzzi_ref = -uzzi_ref,
uzzi_mesh = -uzzi_mesh)
df %<>%
replace_na(list(nb_ref = 0, nb_meshterms = 0))
df %<>%
group_by(journal_main_cat, year) %>%
mutate(nb_cit_fw = nb_cit %>% percent_rank(),
wang_mesh_fw = wang_mesh %>% percent_rank(),
wang_ref_fw = wang_ref %>% percent_rank(),
uzzi_mesh_fw = uzzi_mesh %>% percent_rank(),
uzzi_ref_fw = uzzi_ref %>% percent_rank(),
foster_mesh_fw = foster_mesh %>% percent_rank(),
foster_ref_fw = foster_ref %>% percent_rank(),
lee_mesh_fw = lee_mesh %>% percent_rank(),
lee_ref_fw = lee_ref %>% percent_rank(),
shibayama_abstract_fw = shibayama_abstract %>% percent_rank(),
shibayama_title_fw = shibayama_title %>% percent_rank(),
author_intra_abstract_fw = author_intra_abstract %>% percent_rank(),
author_inter_abstract_fw = author_inter_abstract %>% percent_rank(),
author_intra_title_fw = author_intra_title %>% percent_rank(),
author_inter_title_fw = author_inter_title %>% percent_rank(),
DI5_fw = DI5 %>% percent_rank(),
DI1_fw = DI1 %>% percent_rank(),
DI1nok_fw = DI1nok %>% percent_rank(),
DeIn_fw = DeIn %>% percent_rank(),
Breadth_fw = Breadth %>% percent_rank(),
Depth_fw = Depth %>% percent_rank(),
) %>%
ungroup()
df %>% naniar::gg_miss_var()
df %>%
drop_na(main_category) %>%
mean(nb_cit)
df$nb_cit
df %>%
drop_na(main_category) %>%
mean(na.omit(nb_cit))
df %>%
drop_na(main_category)
df %>%
drop_na(main_category) %>%
mean(na.rm(nb_cit))
df %>%
drop_na(main_category) %>%
mean(nb_cit, na.rm = TRUE)
mean(df$nb_cit %>% drop_na(main_category), na.rm = TRUE)
df$nb_cit %>% drop_na(main_category)
mean(df %>% drop_na(main_category) %>% select(nb_cit), na.rm = TRUE)
mean(df$nb_cit, na.rm = TRUE)
mean(df %>%
drop_na(main_category), na.rm = TRUE)
df %>%
drop_na(main_category)
mean(df %>%
drop_na(main_category)$nb_cit, na.rm = TRUE)
df_temp = df %>%
drop_na(main_category)
mean(df_temp$nb_cit, na.rm = TRUE)
df_temp = df %>%
drop_na(main_category)
mean(df_temp$nb_cit, na.rm = TRUE)
df_temp = df %>%
keep_na(main_category)
df_temp = df %>%
drop_na(main_category)
mean(df_temp$nb_cit, na.rm = TRUE)
df_temp = df[is.na(df$main_category),]
mean(df_temp$nb_cit, na.rm = TRUE)
df$nb_aut
sum(df$nb_aut == 1)
sum(df$nb_aut == 1,na.rm=TRUE)
# Knitr options
### Generic preamble
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
graphics.off()
Sys.setenv(LANG = "en") # For english language
options(scipen = 5) # To deactivate annoying scientific number notation
### Load packages
library(tidyverse) # Collection of all the good stuff like dplyr, ggplot2 ect.
library(magrittr) # For extra-piping operators (eg. %<>%)
library(glue)
library(data.table)
library(plotly)
library(plotly)
setwd("C:/Users/kevin/Documents/GitHub/Taxonomy-of-novelty")
df = fread('regression.csv')
df = fread('Data/regression.csv')
df = unique(df, by = 'PMID')
setDT(df,key = 'PMID')
articles_2000_2005_issn = fread('Data/articles_2000_2005_issn.csv')
setDT(articles_2000_2005_issn,key = 'PMID')
df = merge(df,articles_2000_2005_issn)
df[,journal_main_cat := strsplit(journal_category, "; ")[[1]][1], by = 'PMID']
df[,journal_main_cat := gsub(' \\(Q\\d\\)$','',journal_main_cat)]
length(unique(df$journal_main_cat))
#
########################################"
summary(df)
unique(df$main_category)
df$journal_main_cat
#
########################################"
summary(df)
unique(df$main_category)
unique(df$journal_main_cat)
novelty_cat <- c("New Finding", "Technical Advance","Interesting Hypothesis","Novel Drug Target")
variables <- c("nb_ref","year","nb_aut","journal_SJR")
indicators <- c("uzzi_mesh","lee_mesh","foster_mesh","wang_mesh",
"uzzi_ref","lee_ref","foster_ref","wang_ref",
"shibayama_abstract","shibayama_title",
"author_intra_abstract","author_inter_abstract",
"author_intra_title", "author_inter_title")
indicators_fw <- paste0(indicators, "_fw")
dependant <-  c("nb_cit","DI1","DI5","DI1nok","DeIn","Breadth","Depth")
dependant_fw <- paste0(dependant, "_fw")
df <- df %>% mutate(novel_f1000 = ifelse(main_category %in% novelty_cat, 1, 0))
df <- df %>% filter(nb_ref>1 & nb_meshterms>1 & nb_aut>1)
df %<>%
group_by(journal_main_cat, year) %>%
mutate(nb_cit_fw = nb_cit %>% percent_rank(),
wang_mesh_fw = wang_mesh %>% percent_rank(),
wang_ref_fw = wang_ref %>% percent_rank(),
uzzi_mesh = -uzzi_mesh,
uzzi_ref = -uzzi_ref,
uzzi_mesh_fw = uzzi_mesh %>% percent_rank(),
uzzi_ref_fw = uzzi_ref %>% percent_rank(),
foster_mesh_fw = foster_mesh %>% percent_rank(),
foster_ref_fw = foster_ref %>% percent_rank(),
lee_mesh_fw = lee_mesh %>% percent_rank(),
lee_ref_fw = lee_ref %>% percent_rank(),
shibayama_abstract_fw = shibayama_abstract %>% percent_rank(),
shibayama_title_fw = shibayama_title %>% percent_rank(),
author_intra_abstract_fw = author_intra_abstract %>% percent_rank(),
author_inter_abstract_fw = author_inter_abstract %>% percent_rank(),
author_intra_title_fw = author_intra_title %>% percent_rank(),
author_inter_title_fw = author_inter_title %>% percent_rank(),
DI5_fw = DI5 %>% percent_rank(),
DI1_fw = DI1 %>% percent_rank(),
DI1nok_fw = DI1nok %>% percent_rank(),
DeIn_fw = DeIn %>% percent_rank(),
Breadth_fw = Breadth %>% percent_rank(),
Depth_fw = Depth %>% percent_rank(),
) %>%
ungroup()
fwrite(df,'reg_df.csv')
### Generic preamble
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
graphics.off()
library(data.table)
reg = function(dependant,sq,int,fw,higly_exp = F){
if(fw){
dependant = paste0(dependant,'_fw')
independant = 'author_inter_abstract_fw + author_intra_abstract_fw'
independant_sq = 'I(author_inter_abstract_fw**2) + I(author_intra_abstract_fw**2)'
independant_inter = 'I(author_inter_abstract_fw*author_intra_abstract_fw)'
vars_ = c("nb_ref",
"nb_aut",
'nb_meshterms',
#"sum_deg_cen_cumsum",
"year",
"journal_main_cat",
"share_diverse",
"share_typical",
"journal_SJR",
"author_inter_abstract_fw",
"author_intra_abstract_fw",
"Journal_ISSN",
dependant)
}else{
independant = 'author_inter_abstract + author_intra_abstract'
independant_sq = 'I(author_inter_abstract**2) + I(author_intra_abstract**2)'
independant_inter = 'I(author_inter_abstract*author_intra_abstract)'
vars_ = c("nb_ref",
"nb_aut",
'nb_meshterms',
#"sum_deg_cen_cumsum",
"year",
"journal_main_cat",
"share_diverse",
"share_typical",
"journal_SJR",
"author_inter_abstract",
"author_intra_abstract",
"Journal_ISSN",
dependant)
}
tmp = na.omit(df[,..vars_])
tmp = tmp[journal_main_cat != ""]
tmp = tmp[Journal_ISSN != ""]
controls = 'nb_ref + nb_meshterms + nb_aut + as.factor(year) + journal_main_cat + journal_SJR'
if(sq){
if(int){
formula_ = paste0(dependant," ~ ",independant," + ",independant_sq,' + ',independant_inter,' + ',controls)
} else {
formula_ = paste0(dependant," ~ ",independant," + ",independant_sq,' + ',controls)
}
} else {
if(int){
formula_ = paste0(dependant," ~ ",independant,' + ',independant_inter,' + ',controls)
} else {
formula_ = paste0(dependant," ~ ",independant," + ",controls)
}
}
if(higly_exp){
if(fw){
formula_ = gsub('author_intra_abstract_fw','share_diverse',formula_)
if(sq){
formula_ = gsub('I\\(share_diverse\\*\\*2\\)','share_typical \\+ I(share_diverse*share_typical)',formula_)
} else {
formula_ = gsub('share_diverse','share_diverse \\+ share_typical \\+ I(share_diverse*share_typical)',formula_)
}
}else{
formula_ = gsub('author_intra_abstract','share_diverse',formula_)
if(sq){
formula_ = gsub('I\\(share_diverse\\*\\*2\\)','share_typical \\+ I(share_diverse*share_typical)',formula_)
} else {
formula_ = gsub('share_diverse','share_diverse \\+ share_typical \\+ I(share_diverse*share_typical)',formula_)
}
}
}
print(formula_)
model = lm(formula = as.formula(formula_), tmp)
vcov_cluster <- sandwich::vcovCL(model, cluster = tmp$Journal_ISSN)
return(list(model,vcov_cluster))
}
get_table = function(all_dep,title,sq,int,fw,higly_exp=F){
models = list()
cov = list()
for(i in 1:length(all_dep)){
model = reg(dependant = all_dep[i],
sq = sq,
int = int,
fw = fw,
higly_exp = higly_exp)
models[[i]] = model[[1]]
cov[[i]] = sqrt(diag(model[[2]]))
}
if(sq){
title = paste0(title,'_sq')
}
if(int){
title = paste0(title,'_int')
}
stargazer::stargazer(
models,
se = cov,
align = TRUE, type = "latex",
keep = c('author_inter_abstract','author_intra_abstract','share_diverse',
"share_typical",'nb_aut','nb_ref','nb_meshterms','sum_deg_cen_cumsum','journal_SJR'),
out = paste0(gsub(' ','_',title),'.tex')
)
}
df = fread('reg_df.csv')
all_dep =  c("uzzi_ref","lee_ref","foster_ref","wang_ref","shibayama_abstract")
get_table(all_dep,
'Cognitive dimension and Novelty (on References)',
sq = F,
int = F,
fw = F)
all_dep =  c("uzzi_mesh","lee_mesh","foster_mesh","wang_mesh")
get_table(all_dep,
'Cognitive dimension and Novelty (on Meshterms)',
sq = F,
int = F,
fw = F)
