Sys.setenv(LANG = "en") # For english language
options(scipen = 5) # To deactivate annoying scientific number notation
### Load packages
library(tidyverse) # Collection of all the good stuff like dplyr, ggplot2 ect.
library(magrittr) # For extra-piping operators (eg. %<>%)
library(kableExtra)
install.packages("kableExtra")
# Knitr options
### Generic preamble
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
graphics.off()
Sys.setenv(LANG = "en") # For english language
options(scipen = 5) # To deactivate annoying scientific number notation
### Load packages
library(tidyverse) # Collection of all the good stuff like dplyr, ggplot2 ect.
library(magrittr) # For extra-piping operators (eg. %<>%)
library(kableExtra)
# Descriptives
#library(skimr)
library(stargazer)
# Viz
library(patchwork)
# Survival analysis
library(survival)
library(survminer)
library(ggfortify)
data <- read_rds('../Data/data_reg.rds')
length(unique(data$AID))
df = select(data, c('transition','DL','deg_cen','deg_cen_comp','novelty_fw','citation_fw'))
kbl(summary(df))
kbl(summary(df),booktabs = True)
summary(df)%>%
kbl(caption = "Recreating booktabs style table") %>%
kable_classic(full_width = F, html_font = "Cambria")
summary(df)%>%
kbl(booktabs = True) %>%
kable_classic(full_width = F, html_font = "Cambria")
summary(df)%>%
kbl(booktabs = True) %>%
kable_styling(latex_options = c("striped", "hold_position"))
summary(df)%>%
kbl(booktabs = True) %>%
kable_classic(full_width = F, html_font = "Cambria")
summary(df)%>%
kbl(booktabs = True, format = "latex") %>%
kable_classic(full_width = F, html_font = "Cambria")
summary(df)%>%
kbl(booktabs = TRUE, format = "latex") %>%
kable_classic(full_width = F, html_font = "Cambria")
test = summary(df)%>%
kbl(booktabs = TRUE, format = "latex") %>%
kable_classic(full_width = F, html_font = "Cambria")
print(test)
print(test)
test = summary(df)%>%
kbl(booktabs = TRUE, format = "latex")
print(test)
summary(df)%>%
kbl(booktabs = TRUE) %>%
kable_classic(full_width = F, html_font = "Cambria")
View(data)
data[data$type=="company"]
summary(df).T%>%
t(summary(df))%>%
kbl(booktabs = TRUE) %>%
kable_classic(full_width = F, html_font = "Cambria")
t(summary(df))
as.data.frame(t(summary(df)))
as.data.frame(t(summary(df)))%>%
kbl(booktabs = TRUE) %>%
kable_classic(full_width = F, html_font = "Cambria")
summary(df)
data[data$type=="education"]
data$type=="education"
data$type=="company"
sum(data$type=="company")
# Knitr options
### Generic preamble
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
graphics.off()
Sys.setenv(LANG = "en") # For english language
options(scipen = 5) # To deactivate annoying scientific number notation
### Load packages
library(tidyverse) # Collection of all the good stuff like dplyr, ggplot2 ect.
library(magrittr) # For extra-piping operators (eg. %<>%)
library(kableExtra)
# Descriptives
#library(skimr)
library(stargazer)
# Viz
library(patchwork)
# Survival analysis
library(survival)
library(survminer)
library(ggfortify)
data <- read_rds('../Data/data_reg.rds')
df = select(data, c('transition','DL','deg_cen','deg_cen_comp','novelty_fw','citation_fw'))
data %>%
group_by(AID) %>%
summarise_at(vars("transition"), list(name = mean))
data %>%
group_by(AID) %>%
summarise_at(vars("transition"), list(name = sum)) %>%
mean(sum)
data %>%
group_by(AID) %>%
summarise_at(vars("transition"), list(name = sum)) %>%
mean(name)
data %>%
group_by(AID) %>%
summarise_at(vars("transition"), list(name = sum)) %>%
```
data %>%
group_by(AID) %>%
summarise_at(vars("transition"), list(name = sum)) %>%
```
data %>%
group_by(AID)
data %>%
group_by(AID) %>%
summarise(transition = sum(transition))
data %>%
group_by(AID) %>%
summarise(transition = sum(transition)) %>%
summarise()
data %>%
group_by(AID) %>%
summarise(transition = sum(transition)) %>%
summary(transition)
56158*0.01524
56158*0.02
View(data)
mySummary(df)
mySummary(df)
mySummary <- function(vector, na.rm = FALSE, round = 2){
results <- c(summary(vector), 'Std. Dev' = round(sd(vector, na.rm), 2))
return(results)
}
mySummary(df)
summary(df)
apply(df, 2, sd)
apply(na.omit(df), 2, sd)
data %>%
group_by(AID) %>%
summarise(transition = sum(transition)) %>%
```
data %>%
group_by(AID) %>%
sum(transition) %>%
```
data %>%
group_by(AID)
sum(transition) %>%
)
data %>%
group_by(AID) %>%
sum(transition)
data %>%
group_by(AID) %>%
data %>%
group_by(AID)
data %>%
group_by(AID)
data %>%
group_by(AID) %>%
summarise(switcher = sum(transition))
data %>%
group_by(AID) %>%
summarise(switcher = sum(transition)) %>%
ungroup()
switcher = data %>%
group_by(AID) %>%
summarise(switcher = sum(transition)) %>%
```
data %>%
group_by(AID) %>%
summarise(switcher = sum(transition)) %>%
data %>%
group_by(AID) %>%
summarise(switcher = sum(transition))
switcher <- data %>%
group_by(AID) %>%
summarise(switcher = sum(transition))
merge(data,switcher)
test = merge(data,switcher)
test = merge(data,switcher)
test[test$switcher==1]
test[test$switcher==1,]
unique(test[test$switcher==1,]$AID)
# Knitr options
### Generic preamble
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
graphics.off()
Sys.setenv(LANG = "en") # For english language
options(scipen = 5) # To deactivate annoying scientific number notation
### Load packages
library(tidyverse) # Collection of all the good stuff like dplyr, ggplot2 ect.
library(magrittr) # For extra-piping operators (eg. %<>%)
library(kableExtra)
# Descriptives
#library(skimr)
library(stargazer)
# Viz
library(patchwork)
# Survival analysis
library(survival)
library(survminer)
library(ggfortify)
data <- read_rds('../Data/data_reg.rds')
switcher <- data %>%
group_by(AID) %>%
summarise(switcher = sum(transition))
data[data$switcher==1,]
```{r}
data
switcher
data = merge(data,switcher,by=c('AID'='AID'))
View(data)
data[data$switcher==1,]
461+499+571
461+499+571
1531/3
library(zoo)
```
zoo::rollmean(c(461, 499, 571), k = 3, fill = NA)
```
```
zoo::rollmean(c(461, 499, 571), k = 2, fill = NA)
461+499
960/2
zoo::rollmean(c(461, 499, 571), k = 2, fill = NA,align="right")
data[data$switcher==1,] %>%
group_by("AID")
data[data$switcher==1,] %>%
group_by("AID") %>%
mean()
data[data$switcher==1,] %>%
group_by("AID") %>%
mean()
data[data$switcher==1,] %>%
group_by("AID") %>%
na.omit()
data[data$switcher==1,] %>%
group_by("AID") %>%
na.omit() %>%
mean()
data[data$switcher==1,] %>%
group_by("AID") %>%
na.omit() %>%
summary()
data[data$switcher==1,] %>%
group_by("AID") %>%
na.omit() %>%
summary()
unique(data[data$switcher==1,]$AID)
unique(data[data$switcher==1,]$AID)
data[data$switcher==1,] %>%
group_by("AID") %>%
na.omit() %>%
summary()
length(unique(data[data$switcher==1,]$AID))
length(unique(data[data$switcher==0,]$AID))
55302/55302+856
55302/(55302+856)
data[data$switcher==0,] %>%
group_by("AID") %>%
na.omit() %>%
summary()
data[data$switcher==0,]
data[data$switcher==0,] %>%
group_by("AID") %>%
na.omit()
data[data$switcher==0,] %>%
group_by("AID") %>%
na.omit()
data[data$switcher==0,] %>%
group_by("AID") %>%
data[data$switcher==0,] %>%
group_by("AID") %>%
summary()
data[data$switcher==0,] %>%
group_by("AID")
df = select(data, c('transition','DL','deg_cen','deg_cen_comp','novelty_fw','citation_fw',"paper_n",'switcher'))
data[data$switcher==0,] %>%
group_by("AID") %>%
summary()
data[data$switcher==1,] %>%
group_by("AID") %>%
summary()
Sys.setenv(LANG = "en") # For english language
indicators <- data %>% select(list_aid, year, list_aid, oa, cited_by_count, novelty_lee) %>%
mutate(n_author = list_aid %>% str_count('\n'),
list_aid = list_aid %>% str_split('\n')) %>%
unnest(list_aid) %>%
rename(AID = list_aid) %>%
group_by(AID, year) %>%
summarise(
author_mean = n_author %>% mean(na.rm = TRUE),
paper_n = n(),
citation_n = cited_by_count %>% sum(na.rm = TRUE),
citation_mean = cited_by_count %>% mean(na.rm = TRUE),
citation_max = cited_by_count %>% max(),
oa_mean = oa %>% mean(),
novelty_mean = novelty_lee %>% mean(na.rm = TRUE),
# novelty_max = novelty_lee %>% max()
) %>%
ungroup()
data <- read_csv('../Data/works.csv') %>%
mutate(id = id %>% as.character()) %>%
select(-title, -issn)
indicators <- data %>% select(list_aid, year, list_aid, oa, cited_by_count, novelty_lee) %>%
mutate(n_author = list_aid %>% str_count('\n'),
list_aid = list_aid %>% str_split('\n')) %>%
unnest(list_aid) %>%
rename(AID = list_aid) %>%
group_by(AID, year) %>%
summarise(
author_mean = n_author %>% mean(na.rm = TRUE),
paper_n = n(),
citation_n = cited_by_count %>% sum(na.rm = TRUE),
citation_mean = cited_by_count %>% mean(na.rm = TRUE),
citation_max = cited_by_count %>% max(),
oa_mean = oa %>% mean(),
novelty_mean = novelty_lee %>% mean(na.rm = TRUE),
# novelty_max = novelty_lee %>% max()
) %>%
ungroup()
summary(indicators)
data <- read_csv('../Data/variables.csv') %>%
select(-seniority, -seniority_all, -paper_n, transited_t, -switcher, -concepts, -gender) %>%
mutate(AID = AID %>% as.character())
View(data)
summary(data)
data <- read_csv('../Data/variables.csv') %>%
select(-seniority, -seniority_all, transited_t, -concepts, -gender) %>%
mutate(AID = AID %>% as.character())
summary(data)
View(data)
data[data$switcher==1,] %>%
group_by("AID") %>%
summary()
data[data$switcher==0,] %>%
group_by("AID") %>%
summary()
df[df$switcher==0,] %>%
group_by("AID") %>%
summary()
df[df$switcher==1,] %>%
group_by("AID") %>%
summary()
55302/(55302+856)
### Generic preamble
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
graphics.off()
Sys.setenv(LANG = "en") # For english language
options(scipen = 5) # To deactivate annoying scientific number notation
### Load packages
library(tidyverse) # Collection of all the good stuff like dplyr, ggplot2 ect.
library(magrittr) # For extra-piping operators (eg. %<>%)
library(glue)
# Descriptives
#library(skimr)
library(stargazer)
library(corrplot)
# ML
library(xgboost)
library(caret)
library(caTools)
library(e1071)
#setwd("G:/Github/Taxonomy-of-novelty")
setwd("C:/Users/kevin/Documents/GitHub/Taxonomy-of-novelty")
df_f1000 <- readRDS(file = "Data/regression_data.rds")
for(cat_ in append(f1000_cat,"nb_cit")){
mod_wang_1 <- glm(substitute(i ~ wang_mesh + nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_wang_2 <- glm(substitute(i ~ wang_ref + nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_wang_3 <- glm(substitute(i ~ wang_ref + wang_mesh + nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_uzzi_1 <- glm(substitute(i ~ uzzi_mesh+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_uzzi_2 <- glm(substitute(i ~ uzzi_ref+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_uzzi_3 <- glm(substitute(i ~ uzzi_ref + uzzi_mesh+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_lee_1 <- glm(substitute(i ~ lee_mesh+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_lee_2 <- glm(substitute(i ~ lee_ref+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_lee_3 <- glm(substitute(i ~ lee_mesh + lee_ref+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_foster_1 <- glm(substitute(i ~ foster_mesh+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_foster_2 <- glm(substitute(i ~ foster_ref+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_foster_3 <- glm(substitute(i ~ foster_mesh + foster_ref+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_shib_1 <- glm(substitute(i ~ shibayama_abstract+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_shib_2 <- glm(substitute(i ~ shibayama_title+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_shib_3 <- glm(substitute(i ~ shibayama_abstract + shibayama_title + nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
l = list(mod_wang_1, mod_wang_2, mod_wang_3, mod_uzzi_1, mod_uzzi_2, mod_uzzi_3,
mod_lee_1, mod_lee_2, mod_lee_3, mod_foster_1, mod_foster_2, mod_foster_3,
mod_shib_1,mod_shib_2,mod_shib_3
)
writeLines(capture.output(stargazer(l, font.size = "small", keep.stat = c("n", "rsq"),
omit=append(variables ,c("Constant")),
column.labels=c(cat_),
dep.var.labels=c("","","","","","","","","","","","","","",""),
model.names=FALSE,
no.space=TRUE) ),
glue("Results/Regressions/{cat_}_CV.tex"))
}
f1000_cat = c()
f1000_cat_binary = c()
f1000_cat_restricted = c("New_Finding","Novel_Drug_Target","Controversial","Technical_Advance")
for (i in unique(df_f1000$main_category)){
df_f1000[paste(i)] <- lengths(regmatches(df_f1000$categories, gregexpr(i,df_f1000$categories)))
df_f1000[paste(i,"_binary")] <- ifelse(df_f1000[paste(i)] >= 1, 1, 0)
f1000_cat <- append(f1000_cat,str_replace_all(i, c(" " = "_","/"="_",":"="_")))
f1000_cat_binary <- append(f1000_cat_binary,str_replace_all(paste(i,"_binary"), c(" " = "_","/"="_",":"="_")))
}
for(cat_ in append(f1000_cat,"nb_cit")){
mod_wang_1 <- glm(substitute(i ~ wang_mesh + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_wang_2 <- glm(substitute(i ~ wang_ref + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_wang_3 <- glm(substitute(i ~ wang_mesh + wang_ref + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_uzzi_1 <- glm(substitute(i ~ uzzi_mesh + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_uzzi_2 <- glm(substitute(i ~ uzzi_ref + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_uzzi_3 <- glm(substitute(i ~ uzzi_mesh + uzzi_ref + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_lee_1 <- glm(substitute(i ~ lee_mesh + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_lee_2 <- glm(substitute(i ~ lee_ref + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_lee_3 <- glm(substitute(i ~ lee_mesh + lee_ref + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_foster_1 <- glm(substitute(i ~ foster_mesh + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_foster_2 <- glm(substitute(i ~ foster_ref + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_foster_3 <- glm(substitute(i ~ foster_mesh + foster_ref + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_shib_1 <- glm(substitute(i ~ shibayama_abstract + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_shib_2 <- glm(substitute(i ~ shibayama_title + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_shib_3 <- glm(substitute(i ~ shibayama_abstract + shibayama_title + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
l = list(mod_wang_1, mod_wang_2, mod_wang_3, mod_uzzi_1, mod_uzzi_2, mod_uzzi_3,
mod_lee_1, mod_lee_2, mod_lee_3, mod_foster_1, mod_foster_2, mod_foster_3,
mod_shib_1,mod_shib_2,mod_shib_3
)
writeLines(capture.output(stargazer(l, font.size = "small", keep.stat = c("n", "rsq"),
omit=append(variables ,c("Constant")),
column.labels=c(cat_),
dep.var.labels=c("","","","","","","","","","","","","","",""),
model.names=FALSE,
no.space=TRUE) ),
glue("Results/Regressions/{cat_}.tex"))
}
novelty_cat <- c("New Finding", "Technical Advance","Interesting Hypothesis","Novel Drug Target")
variables <- c("nb_ref","year","nb_aut","journal_SJR","is_review","journal_age")
indicators <- c("uzzi_ref","uzzi_mesh","lee_ref","lee_mesh","foster_ref","foster_mesh","wang_ref","wang_mesh","shibayama_abstract","shibayama_title","author_intra_abstract","author_inter_abstract",
"author_intra_title", "author_inter_title")
indicators_fw <- paste0(indicators, "_fw")
dependant <-  c("nb_cit","DI1","DI5","DI1nok","DeIn","Breadth","Depth")
dependant_fw <- paste0(dependant, "_fw")
for(cat_ in append(f1000_cat,"nb_cit")){
mod_wang_1 <- glm(substitute(i ~ wang_mesh + nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_wang_2 <- glm(substitute(i ~ wang_ref + nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_wang_3 <- glm(substitute(i ~ wang_ref + wang_mesh + nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_uzzi_1 <- glm(substitute(i ~ uzzi_mesh+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_uzzi_2 <- glm(substitute(i ~ uzzi_ref+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_uzzi_3 <- glm(substitute(i ~ uzzi_ref + uzzi_mesh+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_lee_1 <- glm(substitute(i ~ lee_mesh+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_lee_2 <- glm(substitute(i ~ lee_ref+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_lee_3 <- glm(substitute(i ~ lee_mesh + lee_ref+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_foster_1 <- glm(substitute(i ~ foster_mesh+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_foster_2 <- glm(substitute(i ~ foster_ref+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_foster_3 <- glm(substitute(i ~ foster_mesh + foster_ref+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_shib_1 <- glm(substitute(i ~ shibayama_abstract+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_shib_2 <- glm(substitute(i ~ shibayama_title+ nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_shib_3 <- glm(substitute(i ~ shibayama_abstract + shibayama_title + nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
l = list(mod_wang_1, mod_wang_2, mod_wang_3, mod_uzzi_1, mod_uzzi_2, mod_uzzi_3,
mod_lee_1, mod_lee_2, mod_lee_3, mod_foster_1, mod_foster_2, mod_foster_3,
mod_shib_1,mod_shib_2,mod_shib_3
)
writeLines(capture.output(stargazer(l, font.size = "small", keep.stat = c("n", "rsq"),
omit=append(variables ,c("Constant")),
column.labels=c(cat_),
dep.var.labels=c("","","","","","","","","","","","","","",""),
model.names=FALSE,
no.space=TRUE) ),
glue("Results/Regressions/{cat_}_CV.tex"))
}
# Author CV
for(cat_ in append(f1000_cat,"nb_cit")){
mod_author_1 <- glm(substitute(i ~ author_intra_title + nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_author_2 <- glm(substitute(i ~ author_inter_title + nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_author_3 <- glm(substitute(i ~ author_intra_title + author_inter_title + nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_author_4 <- glm(substitute(i ~ author_intra_abstract + nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_author_5 <- glm(substitute(i ~ author_inter_abstract + nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_author_6 <- glm(substitute(i ~ author_intra_abstract + author_inter_abstract + nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_author_7 <- glm(substitute(i ~ author_intra_title + author_inter_title + author_intra_abstract + author_inter_abstract + nb_ref + year + nb_aut + journal_SJR+journal_age, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
l = list(mod_author_1, mod_author_2, mod_author_3, mod_author_4, mod_author_5,
mod_author_6,mod_author_7)
model_names = as.character(c(1:length((l))))
writeLines(capture.output(stargazer(l,keep.stat = c("n", "rsq"),
omit=append(variables ,c("Constant")),
column.labels=c(cat_),
dep.var.labels=c("","","","","","","")) ),
glue("Results/Regressions/{cat_}_author_CV.tex"))
}
for(cat_ in append(f1000_cat,"nb_cit")){
mod_author_1 <- glm(substitute(i ~ author_intra_title + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_author_2 <- glm(substitute(i ~ author_inter_title + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_author_3 <- glm(substitute(i ~ author_intra_title + author_inter_title + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_author_4 <- glm(substitute(i ~ author_intra_abstract + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_author_5 <- glm(substitute(i ~ author_inter_abstract + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_author_6 <- glm(substitute(i ~ author_intra_abstract + author_inter_abstract + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
mod_author_7 <- glm(substitute(i ~ author_intra_title + author_inter_title + author_intra_abstract + author_inter_abstract + year, list(i = as.name(cat_))), data = df_f1000, family ="poisson")
l = list(mod_author_1, mod_author_2, mod_author_3, mod_author_4, mod_author_5,
mod_author_6,mod_author_7)
model_names = as.character(c(1:length((l))))
writeLines(capture.output(stargazer(l,keep.stat = c("n", "rsq"),
omit=append(variables ,c("Constant")),
column.labels=c(cat_),
dep.var.labels=c("","","","","","","")) ),
glue("Results/Regressions/{cat_}_author.tex"))
}
View(df_f1000)
